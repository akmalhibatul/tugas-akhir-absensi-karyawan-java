/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
/**
 *
 * @author akmal
 */
public class MainFrame extends javax.swing.JFrame {
     private static final String URL = "jdbc:mysql://localhost/db_absensi";
        private static final String USERNAME = "root";
        private static final String PASSWORD = "";
        private Connection koneksi;
        private Statement stat;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        koneksiDB();
    }
    
    private void koneksiDB(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            koneksi = DriverManager.getConnection(URL, USERNAME, PASSWORD);
            stat = koneksi.createStatement(); // Menghapus deklarasi tipe data Statement
            System.out.println("Koneksi ke database berhasil");
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Koneksi ke database gagal: " + e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        absenTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(229, 77, 75));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("SISTEM ABSENSI KARYAWAN");

        absenTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        absenTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                absenTFActionPerformed(evt);
            }
        });

        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/gambar/logo3.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(absenTF, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(142, 142, 142))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(absenTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        login lg = new login();
        lg.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void absenTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_absenTFActionPerformed
        // TODO add your handling code here:
        String kodeKaryawan = absenTF.getText();
        try {
            // Cek apakah kode karyawan terdaftar
            if (!isKaryawanTerdaftar(koneksi, kodeKaryawan)) {
                JOptionPane.showMessageDialog(rootPane, "Kode karyawan tidak terdaftar.");
                absenTF.setText("");
                return;
            }

            // Cek apakah sudah melakukan absen hari ini
            if (isSudahAbsenHariIni(koneksi, kodeKaryawan)) {
                JOptionPane.showMessageDialog(rootPane, "Anda sudah melakukan absen hari ini.");
                absenTF.setText("");
                return;
            }

            // Cek apakah absen masuk sudah terisi
            if (isAbsenMasukTerisi(koneksi, kodeKaryawan)) {
                // Absen keluar
                absenKeluar(koneksi, kodeKaryawan);
                JOptionPane.showMessageDialog(rootPane, "Absen keluar berhasil.");
                absenTF.setText("");
            } else {
                // Absen masuk
                absenMasuk(koneksi, kodeKaryawan);
                JOptionPane.showMessageDialog(rootPane, "Absen masuk berhasil.");
                absenTF.setText("");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_absenTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    private static boolean isKaryawanTerdaftar(Connection connection, String kodeKaryawan) throws SQLException {
        String query = "SELECT COUNT(*) AS jumlah FROM karyawan WHERE kode_karyawan = ? ";
        try (PreparedStatement pstmt = connection.prepareStatement(query)) {
            pstmt.setString(1, kodeKaryawan);
            ResultSet result = pstmt.executeQuery();
            return result.next() && result.getInt("jumlah") > 0;
        }
    }

    private static boolean isSudahAbsenHariIni(Connection connection, String kodeKaryawan) throws SQLException {
        Date today = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        String query = "SELECT COUNT(*) AS jumlah FROM rekap_absen WHERE kode_karyawan = ? AND tanggal_absen = ? AND jam_masuk IS NOT NULL AND jam_keluar IS NOT NULL";
        try (PreparedStatement pstmt = connection.prepareStatement(query)) {
            pstmt.setString(1, kodeKaryawan);
            pstmt.setString(2, dateFormat.format(today));
            ResultSet result = pstmt.executeQuery();
            return result.next() && result.getInt("jumlah") > 0;
        }
    }

    private static boolean isAbsenMasukTerisi(Connection connection, String kodeKaryawan) throws SQLException {
        String query = "SELECT COUNT(*) AS jumlah FROM rekap_absen WHERE kode_karyawan = ? AND tanggal_absen = ? AND jam_masuk IS NOT NULL";
        try (PreparedStatement pstmt = connection.prepareStatement(query)) {
            pstmt.setString(1, kodeKaryawan);
            pstmt.setString(2, getCurrentDate());
            ResultSet result = pstmt.executeQuery();
            return result.next() && result.getInt("jumlah") > 0;
        }
    }

    private static void absenMasuk(Connection connection, String kodeKaryawan) throws SQLException {
        String query = "INSERT INTO rekap_absen (tanggal_absen, kode_karyawan, keterangan, jam_masuk) VALUES (?, ?, ?, ?)";
        String jadwalQuery = "SELECT * FROM karyawan INNER JOIN jadwal ON karyawan.id_jadwal = jadwal.id_jadwal WHERE karyawan.kode_karyawan = ?";
        try (PreparedStatement jadwalStmt = connection.prepareStatement(jadwalQuery)) {
            jadwalStmt.setString(1, kodeKaryawan);
            ResultSet jadwalResult = jadwalStmt.executeQuery();
            
            if(jadwalResult.next()){
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                String jam = sdf.format(new Date());
                String jamMasuk = jadwalResult.getString("jam_masuk");

                String keteranganMasuk;

                // Ganti logika sesuai kebutuhan
                if (jam.compareTo(jamMasuk) >= 0) {
                    keteranganMasuk = "Terlambat";
                } else {
                    keteranganMasuk = "Tidak Terlambat";
                }
                try (PreparedStatement pstmt = connection.prepareStatement(query)) {
                    pstmt.setString(1, getCurrentDate());
                    pstmt.setString(2, kodeKaryawan);
                    pstmt.setString(3, keteranganMasuk);
                    pstmt.setTime(4, getCurrentTime());

                    pstmt.executeUpdate();
                }
            }
        }
        
    }

    private static void absenKeluar(Connection connection, String kodeKaryawan) throws SQLException {
        String query = "UPDATE rekap_absen SET jam_keluar = ?, keterangan = ? WHERE kode_karyawan = ? AND tanggal_absen = ?";
        String jadwalQuery = "SELECT * FROM karyawan INNER JOIN jadwal ON karyawan.id_jadwal = jadwal.id_jadwal WHERE karyawan.kode_karyawan = ?";
        try (PreparedStatement jadwalStmt = connection.prepareStatement(jadwalQuery)) {
            jadwalStmt.setString(1, kodeKaryawan);
            ResultSet jadwalResult = jadwalStmt.executeQuery();
            
            if(jadwalResult.next()){
                String jamKeluar = jadwalResult.getString("jam_keluar");
                
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                String jam = sdf.format(new Date());
                
                String keteranganKeluar = "";
                String keteranganMasuk = "Terlambat";
                if ("Terlambat".equals(keteranganMasuk)) {
                     keteranganKeluar = "Terlambat";
                     } else if ("Tidak Terlambat".equals(keteranganMasuk)) {
                     if (jam.compareTo(jamKeluar) < 0) {
                        keteranganKeluar = "Pulang Awal";
                     } else {
                        keteranganKeluar = "Hadir";
                     }
                }        
                try (PreparedStatement pstmt = connection.prepareStatement(query)) {
                    pstmt.setTime(1, getCurrentTime());
                    pstmt.setString(2, keteranganKeluar);
                    pstmt.setString(3, kodeKaryawan);
                    pstmt.setString(4, getCurrentDate());

                    pstmt.executeUpdate();
                }
            }
        }                    

        
    }

    private static String getCurrentDate() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        return dateFormat.format(new Date());
    }

    private static Time getCurrentTime() {
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
        String timeString = timeFormat.format(new Date());
        return Time.valueOf(timeString);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField absenTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
